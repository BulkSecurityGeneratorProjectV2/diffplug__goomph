plugins {
	// https://github.com/spotbugs/spotbugs-gradle-plugin/blob/master/CHANGELOG.md
	id 'com.github.spotbugs' version '3.0.0'
}

apply plugin: 'com.github.ben-manes.versions'

apply plugin: 'com.diffplug.spotless-changelog'
spotlessChangelog {
	changelogFile 'CHANGES.md'
}

apply plugin: 'com.diffplug.blowdryer'

apply from: 干.file('base/java8.gradle')
apply from: 干.file('base/changelog.gradle')
apply from: 干.file('base/gradle-plugin.gradle')
apply from: 干.file('base/maven.gradle')
apply from: 干.file('base/bintray.gradle')
apply from: 干.file('spotless/freshmark.gradle')
apply from: 干.file('spotless/java.gradle')

String VER_DURIAN = '1.2.0'
String VER_DURIAN_SWT = '3.0.0'
String VER_BNDLIB = '4.2.0'
String OLDEST_SUPPORTED_GRADLE = '5.1'
dependencies {
	// Compile misc
	implementation "com.diffplug.durian:durian-core:${VER_DURIAN}"
	implementation "com.diffplug.durian:durian-collect:${VER_DURIAN}"
	implementation "com.diffplug.durian:durian-io:${VER_DURIAN}"
	implementation "com.diffplug.durian:durian-swt.os:${VER_DURIAN_SWT}"
	implementation "commons-io:commons-io:2.6"
	implementation "com.diffplug.spotless:spotless-lib:1.5.1"
	implementation "com.squareup.okhttp3:okhttp:4.2.0"
	implementation "com.squareup.okio:okio:2.4.0"
	// OSGi
	implementation "biz.aQute.bnd:biz.aQute.bndlib:${VER_BNDLIB}"
	// p2 (osgi used in 4.7.2 to match p2-bootstrap)
	api "org.eclipse.platform:org.eclipse.osgi:3.12.50"
	// eclipse 4.7.2
	compileOnly 'org.eclipse.platform:org.eclipse.core.jobs:3.9.2'
	compileOnly 'org.eclipse.platform:org.eclipse.core.runtime:3.13.0'
	compileOnly 'org.eclipse.platform:org.eclipse.core.resources:3.12.0'
	compileOnly 'org.eclipse.platform:org.eclipse.equinox.common:3.9.0'
	compileOnly 'org.eclipse.platform:org.eclipse.ui.workbench:3.110.1'
	compileOnly 'org.eclipse.pde:org.eclipse.pde.core:3.11.100'
	compileOnly 'org.eclipse.jdt:org.eclipse.jdt.launching:3.9.51'
	// from 4.6.3 cuz that's the latest one
	compileOnly 'org.eclipse.emf:org.eclipse.emf.ecore:2.12.0'
	// testing
	testImplementation "junit:junit:4.12"
	testImplementation "org.assertj:assertj-core:3.13.2"
}
configurations.all {
	exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt.${osgi.platform}'
}

test {
	testLogging {
		exceptionFormat = 'full'
	}
}

///////////////////
// OSGi metadata //
///////////////////
jar.manifest.attributes(
		'Manifest-Version': '1.0',
		'Bundle-SymbolicName': 'com.diffplug.gradle.goomph',
		'Bundle-Name': 'com.diffplug.gradle.goomph',
		'Bundle-Version': '0.0.0.SNAPSHOT',
		'Export-Package': 'com.diffplug.gradle.osgi',
		'Bundle-ClassPath': '.',
		'Bundle-ManifestVersion': '2',
		'DynamicImport-Package': '*'
		)

//////////////
// FINDBUGS //
//////////////
spotbugs {
	// https://github.com/spotbugs/spotbugs/blob/master/CHANGELOG.md
	toolVersion = '3.1.12'
	sourceSets = [
		sourceSets.main]	// don't check the test code
	ignoreFailures = false 	// bug free or it doesn't ship!
	reportsDir = file('build/findbugs')
	effort = 'max'			// min|default|max
	reportLevel = 'medium'	// low|medium|high (low = sensitive to even minor mistakes)
	omitVisitors = []		// bugs that we want to ignore
}
// HTML instead of XML
tasks.withType(com.github.spotbugs.SpotBugsTask) {
	reports {
		xml.enabled = false
		html.enabled = true
	}
}
// we'll want the findbugs annotations (they don't have a 3.0.1 version)
dependencies {
	compileOnly 'com.google.code.findbugs:annotations:3.0.1'
	compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
}




///////////
// MAVEN //
///////////
javadoc {
	// TODO: error on invalid javadoc
	// setup links
	options.linksOffline('https://docs.oracle.com/javase/8/docs/api/', 'gradle/javadoc/java8')
	options.linksOffline("https://docs.gradle.org/${OLDEST_SUPPORTED_GRADLE}/javadoc/", 'gradle/javadoc/gradle')
	options.linksOffline("https://diffplug.github.io/durian/javadoc/${VER_DURIAN}/", 'gradle/javadoc/durian')
	options.linksOffline("https://diffplug.github.io/durian-swt/javadoc/${VER_DURIAN_SWT}/", 'gradle/javadoc/durian-swt')
	options.linksOffline("https://www.javadoc.io/doc/biz.aQute.bnd/biz.aQute.bndlib/${VER_BNDLIB}/", 'gradle/javadoc/bndlib')
}

// TODO: are we handling the com.google.code.findbugs dep correctly in the new publishing setup?
/*
 model.publishing.publications.pluginMaven.pom.withXml {
 // findbugs annotations should have scope "provided"
 asNode().dependencies.'*'.findAll() { it.groupId.text() == 'com.google.code.findbugs' }.each() { it.scope*.value = 'provided' }
 }
 */
